/// <reference types="lodash" />
import { SvelteComponentTyped } from "svelte";
import type { Data, Layout, Config, PlotlyHTMLElement, BeforePlotEvent, ClickAnnotationEvent, FrameAnimationEvent, LegendClickEvent, PlotMouseEvent, PlotHoverEvent, PlotRelayoutEvent, PlotRestyleEvent, PlotSelectionEvent, SliderEndEvent, SliderChangeEvent, SliderStartEvent, SunburstClickEvent } from 'plotly.js';
export type { Data, Layout, Config, PlotlyHTMLElement, BeforePlotEvent, ClickAnnotationEvent, FrameAnimationEvent, LegendClickEvent, PlotMouseEvent, PlotHoverEvent, PlotRelayoutEvent, PlotRestyleEvent, PlotSelectionEvent, SliderChangeEvent, SliderStartEvent, SunburstClickEvent };
export declare type FillParent = boolean | 'width' | 'height';
import type { DebounceSettings } from 'lodash-es';
export interface DebounceOptions extends DebounceSettings {
    wait: number;
}
export interface ButtonClickedEvent {
    menu: any;
    button: any;
    active: any;
}
export interface PlotUpdateEvent {
    data: Data;
    layout: Layout;
}
declare const __propDef: {
    props: {
        element?: (null | undefined) | HTMLDivElement;
        plot?: (null | undefined) | PlotlyHTMLElement;
        libPlotly?: typeof import('plotly.js-dist') | null | undefined;
        data: Data[];
        layout?: Partial<Layout> | undefined;
        config?: Partial<Config> | undefined;
        fillParent?: FillParent | undefined;
        debounce?: number | DebounceOptions | undefined;
        class?: string | undefined;
    };
    slots: {};
    getters: {};
    events: {
        afterExport: undefined;
        afterPlot: undefined;
        animated: undefined;
        animating: undefined;
        animatingFrame: FrameAnimationEvent;
        animationInterrupted: undefined;
        autoSize: undefined;
        beforeExport: undefined;
        beforeHover: PlotMouseEvent;
        beforePlot: BeforePlotEvent;
        buttonClicked: ButtonClickedEvent;
        click: PlotMouseEvent;
        clickAnnotation: ClickAnnotationEvent;
        deselect: undefined;
        doubleClick: undefined;
        framework: undefined;
        hover: PlotHoverEvent;
        legendClick: LegendClickEvent;
        legendDoubleClick: LegendClickEvent;
        react: PlotUpdateEvent;
        redraw: undefined;
        relayout: PlotRelayoutEvent;
        relayouting: PlotRelayoutEvent;
        restyle: PlotRestyleEvent;
        selected: PlotSelectionEvent;
        selecting: PlotSelectionEvent;
        sliderChange: SliderChangeEvent;
        sliderEnd: SliderEndEvent;
        sliderStart: SliderStartEvent;
        sunburstClick: SunburstClickEvent;
        transitioned: undefined;
        transitioning: undefined;
        transitionInterrupted: undefined;
        unhover: PlotMouseEvent;
        update: PlotUpdateEvent;
        webGLContextLost: undefined;
    };
};
export declare type PlotProps = typeof __propDef.props;
export declare type PlotEvents = typeof __propDef.events;
export declare type PlotSlots = typeof __propDef.slots;
export default class Plot extends SvelteComponentTyped<PlotProps, PlotEvents, PlotSlots> {
}
